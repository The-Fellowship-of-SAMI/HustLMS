// <auto-generated />
using System;
using LetterManagement.Server.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LetterManagement.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230103065131_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("LetterManagement.Server.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Letter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteToStudent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.LetterTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Footer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("LetterTemplates");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.TemplateAdditionalField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldType")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GroupAdditionalFieldId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LetterTemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupAdditionalFieldId");

                    b.HasIndex("LetterTemplateId");

                    b.ToTable("TemplateAdditionalField");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TemplateAdditionalField");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LetterManagement.Server.Models.LetterAdditionalField", b =>
                {
                    b.HasBaseType("LetterManagement.Server.Models.TemplateAdditionalField");

                    b.Property<string>("FieldValue")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LetterId")
                        .HasColumnType("TEXT");

                    b.HasIndex("LetterId");

                    b.HasDiscriminator().HasValue("LetterAdditionalField");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Letter", b =>
                {
                    b.HasOne("LetterManagement.Server.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("LetterManagement.Server.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("LetterManagement.Server.Models.LetterTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.Navigation("Manager");

                    b.Navigation("Student");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.LetterTemplate", b =>
                {
                    b.HasOne("LetterManagement.Server.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Manager", b =>
                {
                    b.HasOne("LetterManagement.Server.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.TemplateAdditionalField", b =>
                {
                    b.HasOne("LetterManagement.Server.Models.TemplateAdditionalField", "GroupAdditionalField")
                        .WithMany()
                        .HasForeignKey("GroupAdditionalFieldId");

                    b.HasOne("LetterManagement.Server.Models.LetterTemplate", null)
                        .WithMany("AdditionalFields")
                        .HasForeignKey("LetterTemplateId");

                    b.Navigation("GroupAdditionalField");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.LetterAdditionalField", b =>
                {
                    b.HasOne("LetterManagement.Server.Models.Letter", null)
                        .WithMany("LetterAdditionalFields")
                        .HasForeignKey("LetterId");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.Letter", b =>
                {
                    b.Navigation("LetterAdditionalFields");
                });

            modelBuilder.Entity("LetterManagement.Server.Models.LetterTemplate", b =>
                {
                    b.Navigation("AdditionalFields");
                });
#pragma warning restore 612, 618
        }
    }
}
