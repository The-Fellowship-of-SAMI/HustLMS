@page "/CreateLetter/{templateId}"
@using LetterManagement.Shared.Models
@using LetterManagement.Client.Components
@using LetterManagement.Client.StateContainer

@inject HttpClient HttpClient;
@inject NavigationManager NavigationManager;
@inject UserState UserState;
<LetterForm Template="@Template" Letter="_letter"></LetterForm>

@if (Template != null)
{
    <PageTitle>Viết đơn @Template.Name</PageTitle>
}

else
{
    <MudProgressLinear  Color="Color.Primary" Indeterminate="true" />
}

@code {
    [Parameter]
    public string? TemplateId { get; set; }

    protected LetterTemplate? Template;
    
    private Letter? _letter { get; set; } 
    
    protected override async void OnInitialized()
    {
        try
        {
            this.Template = await HttpClient.GetFromJsonAsync<LetterTemplate>($"/api/LetterTemplates/{TemplateId}");
            this._letter = new Letter()
            {
                Student = UserState.Student,
                Template = Template,
            };
            StateHasChanged();
        }
        catch (Exception e)
        {
            NavigationManager.NavigateTo("templateList");
        }
        
    }

}
