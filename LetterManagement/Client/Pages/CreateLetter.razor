@page "/CreateLetter/{templateId}"
@using LetterManagement.Shared.Models
@using LetterManagement.Client.Components
@using LetterManagement.Client.StateContainer

@inject HttpClient HttpClient;
@inject NavigationManager NavigationManager;
@inject UserState UserState;

<LetterForm Template="@_template" Letter="Letter"></LetterForm>

@if (_template != null)
{
    <PageTitle>Viết đơn @_template.Name?.ToLower()</PageTitle>
}

else
{
    <MudProgressLinear  Color="Color.Primary" Indeterminate="true" />
}

@code {
    [Parameter]
    public string? TemplateId { get; set; }

    private LetterTemplate? _template;

    private Letter? Letter { get; set; } 
    
    protected override async void OnInitialized()
    {
        try
        {
            this._template = await HttpClient.GetFromJsonAsync<LetterTemplate>($"/api/LetterTemplates/{TemplateId}");
            this.Letter = new Letter()
            {
                Student = UserState.Student,
                Template = _template,
            };
            StateHasChanged();
        }
        catch (Exception e)
        {
            NavigationManager.NavigateTo("templateList");
        }
        
    }

}
