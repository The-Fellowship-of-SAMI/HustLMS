@page "/templateList"
@using LetterManagement.Shared.Models
@inject HttpClient Http;
@inject NavigationManager NavigationManager;

@if (LetterTemplates is null)
{
    <MudProgressLinear  Color="Color.Info" Indeterminate="true" />
}
else
{
    <MudPaper Class="pa-2 ma-auto" Elevation="0" Width="50%">
        <MudStack Spacing="4">
                @foreach (var template in LetterTemplates)
                {
                            <MudCard Elevation="2">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Typo="@Typo.h5">@template.Name</MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudText>Đơn vị: @template.Department?.Name</MudText>
                                    <MudText GutterBottom="@true">Phiên bản: @template.ModifiedAt.ToString("dd.MM.yyyy")</MudText>
                                </MudCardContent>
                                <MudCardActions Class="mb-0">
                                    <MudButton Variant="@Variant.Text" Color="@Color.Primary" OnClick="@(() => OnClickCreateLetter(template.Id.ToString()))">Viết đơn</MudButton>
                                </MudCardActions>
                            </MudCard>
                }
        </MudStack>
    </MudPaper>
}
@code {
    protected IEnumerable<LetterTemplate>? LetterTemplates { get; set; } = null;
    protected override async void OnInitialized()
    {
        this.LetterTemplates = await Http.GetFromJsonAsync<IEnumerable<LetterTemplate>>("api/LetterTemplates");
        StateHasChanged();
    }

    private void OnClickCreateLetter(string templateId)
    {
        NavigationManager.NavigateTo("CreateLetter/" + templateId);
    }

}