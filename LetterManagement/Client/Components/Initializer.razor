@using LetterManagement.Client.StateContainer;
@using LetterManagement.Shared.Models;
@inject UserState UserState;
@inject TokenState TokenState;
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage;

@code {

    protected override async void OnInitialized()
    {
        try
        {
            var token = await localStorage.GetItemAsync<TokenState>("token");
            var user = await this.localStorage.GetItemAsync<UserState>("user");
            Console.WriteLine(token.Token);
            if (token.Token is null || user is null)
            {
                NavigationManager.NavigateTo("/login");

            }
            this.TokenState = token;
            this.UserState = user;
            StateHasChanged();
        }
        catch(Exception e)
        {
            Console.WriteLine(e.StackTrace);
            NavigationManager.NavigateTo("/login");
        }



    }
}
